// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WeatherAPI.Models;

#nullable disable

namespace WeatherAPI.Migrations
{
    [DbContext(typeof(WeatherContext))]
    partial class WeatherContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.3");

            modelBuilder.Entity("WeatherAPI.Models.Clouds", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("All")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Clouds");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            All = 29
                        },
                        new
                        {
                            Id = 2,
                            All = 31
                        },
                        new
                        {
                            Id = 3,
                            All = 0
                        },
                        new
                        {
                            Id = 4,
                            All = 50
                        },
                        new
                        {
                            Id = 5,
                            All = 97
                        },
                        new
                        {
                            Id = 6,
                            All = 50
                        },
                        new
                        {
                            Id = 7,
                            All = 85
                        },
                        new
                        {
                            Id = 8,
                            All = 67
                        },
                        new
                        {
                            Id = 9,
                            All = 54
                        },
                        new
                        {
                            Id = 10,
                            All = 84
                        });
                });

            modelBuilder.Entity("WeatherAPI.Models.Main", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Humidity")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Pressure")
                        .HasColumnType("INTEGER");

                    b.Property<double>("Temp")
                        .HasColumnType("REAL");

                    b.Property<double>("Temp_max")
                        .HasColumnType("REAL");

                    b.Property<double>("Temp_min")
                        .HasColumnType("REAL");

                    b.HasKey("Id");

                    b.ToTable("Main");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Humidity = 54,
                            Pressure = 1019,
                            Temp = 17.5,
                            Temp_max = 17.0,
                            Temp_min = 18.0
                        },
                        new
                        {
                            Id = 2,
                            Humidity = 50,
                            Pressure = 1014,
                            Temp = 15.5,
                            Temp_max = 12.0,
                            Temp_min = 19.0
                        },
                        new
                        {
                            Id = 3,
                            Humidity = 81,
                            Pressure = 1017,
                            Temp = 25.5,
                            Temp_max = 22.0,
                            Temp_min = 29.0
                        },
                        new
                        {
                            Id = 4,
                            Humidity = 58,
                            Pressure = 1016,
                            Temp = 16.0,
                            Temp_max = 18.0,
                            Temp_min = 14.0
                        },
                        new
                        {
                            Id = 5,
                            Humidity = 5,
                            Pressure = 1005,
                            Temp = 8.0,
                            Temp_max = 8.0,
                            Temp_min = 8.0
                        },
                        new
                        {
                            Id = 6,
                            Humidity = 84,
                            Pressure = 1004,
                            Temp = 13.0,
                            Temp_max = 15.0,
                            Temp_min = 11.0
                        },
                        new
                        {
                            Id = 7,
                            Humidity = 84,
                            Pressure = 1008,
                            Temp = 1.5,
                            Temp_max = 1.0,
                            Temp_min = 2.0
                        },
                        new
                        {
                            Id = 8,
                            Humidity = 38,
                            Pressure = 1011,
                            Temp = 28.5,
                            Temp_max = 29.0,
                            Temp_min = 28.0
                        },
                        new
                        {
                            Id = 9,
                            Humidity = 50,
                            Pressure = 1003,
                            Temp = 3.5,
                            Temp_max = 2.0,
                            Temp_min = 5.0
                        },
                        new
                        {
                            Id = 10,
                            Humidity = 73,
                            Pressure = 1007,
                            Temp = 7.0,
                            Temp_max = 2.0,
                            Temp_min = 12.0
                        });
                });

            modelBuilder.Entity("WeatherAPI.Models.Root", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CloudsId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Dt")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("MainId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("SysId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("WindId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("CloudsId");

                    b.HasIndex("MainId");

                    b.HasIndex("SysId");

                    b.HasIndex("WindId");

                    b.ToTable("Roots");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CloudsId = 1,
                            Dt = "1648044203",
                            MainId = 1,
                            Name = "Erfurt",
                            SysId = 1,
                            WindId = 1
                        },
                        new
                        {
                            Id = 2,
                            CloudsId = 2,
                            Dt = "1648044203",
                            MainId = 2,
                            Name = "Berlin",
                            SysId = 1,
                            WindId = 2
                        },
                        new
                        {
                            Id = 3,
                            CloudsId = 3,
                            Dt = "1648044203",
                            MainId = 3,
                            Name = "Bremen",
                            SysId = 1,
                            WindId = 3
                        },
                        new
                        {
                            Id = 4,
                            CloudsId = 4,
                            Dt = "1648044203",
                            MainId = 4,
                            Name = "Leipzig",
                            SysId = 1,
                            WindId = 4
                        },
                        new
                        {
                            Id = 5,
                            CloudsId = 5,
                            Dt = "1648044203",
                            MainId = 5,
                            Name = "Hamburg",
                            SysId = 1,
                            WindId = 5
                        },
                        new
                        {
                            Id = 6,
                            CloudsId = 6,
                            Dt = "1648044203",
                            MainId = 6,
                            Name = "Rostock",
                            SysId = 1,
                            WindId = 6
                        },
                        new
                        {
                            Id = 7,
                            CloudsId = 7,
                            Dt = "1648044203",
                            MainId = 7,
                            Name = "Hannover",
                            SysId = 1,
                            WindId = 7
                        },
                        new
                        {
                            Id = 8,
                            CloudsId = 8,
                            Dt = "1648044203",
                            MainId = 8,
                            Name = "Magdeburg",
                            SysId = 1,
                            WindId = 8
                        },
                        new
                        {
                            Id = 9,
                            CloudsId = 9,
                            Dt = "1648044203",
                            MainId = 9,
                            Name = "Dresden",
                            SysId = 1,
                            WindId = 9
                        },
                        new
                        {
                            Id = 10,
                            CloudsId = 10,
                            Dt = "1648044203",
                            MainId = 10,
                            Name = "Stuttgart",
                            SysId = 1,
                            WindId = 10
                        });
                });

            modelBuilder.Entity("WeatherAPI.Models.Sys", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Sys");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Country = "DE"
                        });
                });

            modelBuilder.Entity("WeatherAPI.Models.Weather", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Icon")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Main")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("RootId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("RootId");

                    b.ToTable("Weather");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "regnerisch",
                            Icon = "2",
                            Main = "regnerisch",
                            RootId = 1
                        },
                        new
                        {
                            Id = 2,
                            Description = "sonnig",
                            Icon = "0",
                            Main = "sonnig",
                            RootId = 2
                        },
                        new
                        {
                            Id = 3,
                            Description = "bedeckt",
                            Icon = "1",
                            Main = "bedeckt",
                            RootId = 3
                        },
                        new
                        {
                            Id = 4,
                            Description = "sonnig",
                            Icon = "0",
                            Main = "sonnig",
                            RootId = 4
                        },
                        new
                        {
                            Id = 5,
                            Description = "bedeckt",
                            Icon = "1",
                            Main = "bedeckt",
                            RootId = 5
                        },
                        new
                        {
                            Id = 6,
                            Description = "regnerisch",
                            Icon = "2",
                            Main = "regnerisch",
                            RootId = 6
                        },
                        new
                        {
                            Id = 7,
                            Description = "bedeckt",
                            Icon = "1",
                            Main = "bedeckt",
                            RootId = 7
                        },
                        new
                        {
                            Id = 8,
                            Description = "regnerisch",
                            Icon = "2",
                            Main = "regnerisch",
                            RootId = 8
                        },
                        new
                        {
                            Id = 9,
                            Description = "regnerisch",
                            Icon = "2",
                            Main = "regnerisch",
                            RootId = 9
                        },
                        new
                        {
                            Id = 10,
                            Description = "bedeckt",
                            Icon = "1",
                            Main = "bedeckt",
                            RootId = 10
                        });
                });

            modelBuilder.Entity("WeatherAPI.Models.Wind", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Deg")
                        .HasColumnType("INTEGER");

                    b.Property<double>("Speed")
                        .HasColumnType("REAL");

                    b.HasKey("Id");

                    b.ToTable("Wind");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Deg = 224,
                            Speed = 9.7899999999999991
                        },
                        new
                        {
                            Id = 2,
                            Deg = 343,
                            Speed = 6.8200000000000003
                        },
                        new
                        {
                            Id = 3,
                            Deg = 304,
                            Speed = 3.6800000000000002
                        },
                        new
                        {
                            Id = 4,
                            Deg = 331,
                            Speed = 8.4199999999999999
                        },
                        new
                        {
                            Id = 5,
                            Deg = 47,
                            Speed = 8.0899999999999999
                        },
                        new
                        {
                            Id = 6,
                            Deg = 350,
                            Speed = 7.25
                        },
                        new
                        {
                            Id = 7,
                            Deg = 84,
                            Speed = 8.0600000000000005
                        },
                        new
                        {
                            Id = 8,
                            Deg = 353,
                            Speed = 1.5600000000000001
                        },
                        new
                        {
                            Id = 9,
                            Deg = 339,
                            Speed = 7.9400000000000004
                        },
                        new
                        {
                            Id = 10,
                            Deg = 170,
                            Speed = 2.8799999999999999
                        });
                });

            modelBuilder.Entity("WeatherAPI.Models.Root", b =>
                {
                    b.HasOne("WeatherAPI.Models.Clouds", "Clouds")
                        .WithMany()
                        .HasForeignKey("CloudsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WeatherAPI.Models.Main", "Main")
                        .WithMany()
                        .HasForeignKey("MainId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WeatherAPI.Models.Sys", "Sys")
                        .WithMany()
                        .HasForeignKey("SysId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WeatherAPI.Models.Wind", "Wind")
                        .WithMany()
                        .HasForeignKey("WindId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Clouds");

                    b.Navigation("Main");

                    b.Navigation("Sys");

                    b.Navigation("Wind");
                });

            modelBuilder.Entity("WeatherAPI.Models.Weather", b =>
                {
                    b.HasOne("WeatherAPI.Models.Root", null)
                        .WithMany("Weather")
                        .HasForeignKey("RootId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WeatherAPI.Models.Root", b =>
                {
                    b.Navigation("Weather");
                });
#pragma warning restore 612, 618
        }
    }
}
